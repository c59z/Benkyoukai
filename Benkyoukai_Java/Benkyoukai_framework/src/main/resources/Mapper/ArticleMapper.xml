<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yuki.Mapper.ArticleMapper">
    <insert id="insertArticle">
        insert into article (title,summary,content,category_tags,thumbnail,status,create_by,create_time)
            values (#{title},#{summary},#{content},#{categoryTags},#{thumbnail}, #{status},#{createBy},#{createTime})
    </insert>
    <insert id="insertArticleLike">
        insert into articlelike (article_id, user_id, create_time)
        VALUES (#{id},#{userId},#{date})
    </insert>
    <insert id="insertComment">
        insert into comment (article_id, user_id, content, create_time)
        VALUES (#{articleId},#{userId},#{content},#{createTime})
    </insert>
    <insert id="insertCommentLike">
        insert into commentlike (comment_id, user_id, create_time)
        VALUES(#{id},#{userId},#{date})
    </insert>
    <insert id="insertReply">
        insert into comment (article_id, user_id, content, create_time,parent_id)
        VALUES (#{articleId},#{userId},#{content},#{createTime},#{parentId})
    </insert>
    <update id="updateArticle">
        update article
            set title = #{title},
            content = #{content},
            summary = #{summary},
            category_tags = #{categoryTags},
            thumbnail = #{thumbnail},
            create_time = #{createTime},
            update_time = #{updateTime}
        where id = #{id}
    </update>
    <update id="updateArticleLikeState">
        update articlelike
            set state = #{state}
        where article_id = #{id} and user_id = #{userId}
    </update>
    <update id="updateCommentLikeState">
        update commentlike
            set state = #{state}
        where user_id = #{userId}
            and comment_id = #{id}
    </update>
    <update id="updateLikeCount">
        update article
            set like_count = #{count}
        where id = #{articleId}
    </update>
    <update id="updateViewCount">
        update article
        set view_count = view_count + 1
        where id = #{articleId}
    </update>
    <delete id="deleteArticle">
        update article
            set del_flag = 1
        where id = #{id}
    </delete>
    <select id="getAllArticles" resultType="com.yuki.Domain.Entity.Article">
        select * from article
    </select>
    <select id="getRandomRecommend" resultType="com.yuki.Domain.Entity.Vo.ArticleVo">
        select
            t1.id,
            t1.title,
            t1.summary,
            t1.category_tags,
            t1.thumbnail,
            t1.is_top,
            t1.status,
            t1.view_count,
            t1.like_count,
            t1.create_by,
            t1.create_time,
            u.avatar  -- 获取发布者的 avatar
        from
            article as t1
                join
            (
                select
                    id
                from
                    article
                where t1.status = 1 and t1.del_flag = 0
                order by
                    RAND()
                limit 16
            ) as t2
            on t1.id = t2.id
                join sys_user u  -- 关联用户表
                     on t1.create_by = u.id  -- 通过 create_by 字段关联用户
        order by
            t1.id
        limit 4;
    </select>
    <select id="selectArticlesByPagination" resultType="com.yuki.Domain.Entity.Vo.ArticleVo">
        select
        a.id,
        a.title,
        a.summary,
        a.category_tags,
        a.thumbnail,
        a.is_top,
        a.status,
        a.view_count,
        a.like_count,
        a.create_by,
        a.create_time,
        u.avatar
        from
        article a
        join
        sys_user u
        on
        a.create_by = u.id
        where
        a.status = 1
        and a.del_flag = 0
        order by id desc
        limit
        #{pageSize}
        offset
        #{offset}
    </select>
    <select id="getArticleDetail" resultType="com.yuki.Domain.Entity.Article">

        select
            a.id,
            a.title,
            a.content,
            a.summary,
            a.category_tags,
            a.thumbnail,
            a.is_top,
            a.status,
            a.view_count,
            a.like_count,
            a.create_by,
            a.create_time,
            u.avatar,
            u.username,
            u.nickname
        from
            article a
                join
            sys_user u
            on
                a.create_by = u.id
        where
            a.status = 1
          and a.del_flag = 0
          and a.id = #{id}
    </select>
    <select id="getArticleLike" resultType="com.yuki.Domain.Entity.Articlelike">
        select * from articlelike where article_id = #{id} and user_id = #{userId}
    </select>
    <select id="getComment" resultType="com.yuki.Domain.Entity.Comment">
        select * from comment where id = #{id} and state = 1;
    </select>
    <select id="getCommentLike" resultType="com.yuki.Domain.Entity.Commentlike">
        select * from commentlike where comment_id = #{id} and user_id = #{userId};
    </select>
    <select id="getCommentsByArticleId" resultType="com.yuki.Domain.Entity.Vo.CommentVo">
        select *
        from comment
        where article_id = #{articleId}
          and state = 1
          and parent_id is null
        order by create_time
    </select>
    <select id="getLikeCountByCommentId" resultType="java.lang.Integer">
        select count(*) from commentlike
                        where comment_id = #{commentId}
    </select>
    <select id="getCommentsByParentId" resultType="com.yuki.Domain.Entity.Vo.CommentVo">
        SELECT id, parent_id, content, user_id, create_time
        FROM comment
        WHERE parent_id = #{id}
        ORDER BY create_time
    </select>
    <select id="getLikeCount" resultType="java.lang.Long">
        select count(*) from articlelike
                        where article_id = #{articleId}
    </select>
    <select id="selectArticlesByPaginationAndUser" resultType="com.yuki.Domain.Entity.Vo.ArticleVo">
        select
            a.id,
            a.title,
            a.summary,
            a.category_tags,
            a.thumbnail,
            a.is_top,
            a.status,
            a.view_count,
            a.like_count,
            a.create_by,
            a.create_time,
            u.avatar
        from
            article a
                join
            sys_user u
            on
                a.create_by = u.id
        where
            a.status = 1
          and a.del_flag = 0
        and a.create_by = #{userId}
        order by id desc
        limit
            #{pageSize}
            offset
            #{offset}
    </select>
    <select id="getArticleCount" resultType="java.lang.Long">
        select count(id) from article where del_flag = 0 and status = 1
    </select>
    <select id="getArticlesByKeyWord" resultType="com.yuki.Domain.Entity.Vo.ArticleVo">
        select
            a.id,
            a.title,
            a.summary,
            a.category_tags,
            a.thumbnail,
            a.is_top,
            a.status,
            a.view_count,
            a.like_count,
            a.create_by,
            a.create_time,
            u.avatar
        from article a
                 join
             sys_user u
             on
                 a.create_by = u.id
        where
            (content like concat('%', #{kw}, '%') OR
            a.summary like concat('%', #{kw}, '%') OR
            a.category_tags like concat('%', #{kw}, '%') OR
            a.title like concat('%', #{kw}, '%'))
            and a.del_flag = 0
            and a.status = 1
            order by id desc
    </select>
    <select id="getAllId" resultType="java.lang.Integer">
        select id from article
        where del_flag = 0
          and status = 1
    </select>
    <select id="getArticleById" resultType="com.yuki.Domain.Entity.Vo.ArticleVo">
        select
            a.id,
            a.title,
            a.summary,
            a.category_tags,
            a.thumbnail,
            a.is_top,
            a.status,
            a.view_count,
            a.like_count,
            a.create_by,
            a.create_time,
            u.avatar
        from article a
                 join
             sys_user u
             on
                 a.create_by = u.id
        where
            a.id = #{randomIndex}
    </select>
    <select id="getUserIdByArticleId" resultType="java.lang.Long">
        select create_by from article where id = #{id}
and del_flag = 0 and status = 1
    </select>


</mapper>